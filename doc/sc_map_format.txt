Dec 4th, 2014 :
===============

So close yet so far. 


Strike Commander maps are generated just after the installation.
The program to generate them all is MKTERR.EXE.
Using IDA, it seems a lot of floating operations occur there. A wild guess is
that they use the same technique as Frontier Elite game and use a set of seeds 
which combined together generated the terran. A combinations of harmonic could 
work.

MKTERR.EXE seems to be making two passes: 

    - Generate the 3D data.
    - Generate colors.

Could the color step be assigning a material based on elevation (snow, ground, land, sea)
and calculate the gouraud shading ? I cannot imagine hardware of the time calculate gouraud
shading for each 3D vertex visible on the map on the fly. That would make sense to 
precalculate them.


A map in Strike Commander is contained within a PAK archive:

ALASKA.PAK	
ARENA.PAK	    -> Training and dogfight
EUROPE.PAK	
MSFILES.PAK	    -> Unknown content
SANFRAN.PAK
ANDMAL1.PAK	
CANYON.PAK	
MAPDATA.PAK	
QUEBEC.PAK	
TURKEY.PAK
ANDMAL2.PAK	
EGYPT.PAK	
MAURITAN.PAK	
RHODEI.PAK

All PAKS have the same structural content:

- Index[0]: IFF File with chuncks:
      - TREA
      - TXMS: Reference textures used. Details of textures in TXM_LIST.IFF. Textures Data in TXMPACK.PAK.
      - ELEV
      - TRIS


- Index[1-3]: Three files with XXX entries each:
       - First  file entries are 2400 bytes
       - Second file entries are 600 bytes (Note: 600 = 2400/4)
       - Third  file entries are 150 bytes (Note: 150 =  600/4)

    Those files are obiously mipmaps....but of what ? 3D, precalculated gouraud ?  

- Index[4] :
       - .TRI file : Unknown content: Could it contain the elevation of evenly spaced vertices ?

- Index[5] :
	   - .OBJ file : Contains the OBJ name, 3D appearance and 3D coordinates in world space.

- Index[6] :
       - .AVG file : 

Note: All maps have the same AVG and index[1-3] file size. I think it is because all maps have the same dimensions.
That means data are not compressed ( a flat land would not the same vertex resolution as a land with crevasses).
If vertex are evenly spaces on the map, that would mean only elevation are stored and 3D data is reconstructed at runtime.
Since RAM was so sparce in the 90s that would actually make a lot of sense to have a full 3 component vertex exist
only when it is about to be rendered to the screen.

Now, how spaces are the vertex infomations ?
      .AVG could contains the average elevation for a block ?



Guild guesses :

According the game palette, they are 16 shades of each colors. That would mean a precalculated
shade for a terran vertex would take 1/2 byte. 2400 bytes would give 4800 vertice shades.

Divisors of 4800 :

1, 2, 3, 4, 5, 6, 8, 10, 12, 15, 16, 20, 24, 25, 30, 32, 40, 48, 50, 60, 64, 75, 80, 96, 100, 
120, 150, 160, 192, 200, 240, 300, 320, 400, 480, 600, 800, 960, 1200, 1600, 2400, 4800

A block could be 80x60 vertice ? 

What about 300 :

Divisor : 1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 25, 30, 50, 60, 75, 100, 150, 300

A block from far away would be 20X15 vertice ?


Terran color and vertices :
Is this information hard-coded somewhere and generated based on evelation ? 
high = snow  = white. 
low  = water = blue.
Maybe. And then just like for the jet, we would have a second set of triangles for the 
few one that have a textures ?

I think at the minimun the triangles must feature a color since there are missions in
 the desert or canyon area: Those colors could not be generated by elevation data alone.
